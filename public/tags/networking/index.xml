<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>networking - Tag - n0p Blog</title><link>https://blog.n0p.me/tags/networking/</link><description>networking - Tag - n0p Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 07 Feb 2020 10:24:00 +0000</lastBuildDate><atom:link href="https://blog.n0p.me/tags/networking/" rel="self" type="application/rss+xml"/><item><title>Monitoring 200K DNS Queries per second using ClickHouse</title><link>https://blog.n0p.me/2020/02/2020-02-05-dnsmonster/</link><pubDate>Fri, 07 Feb 2020 10:24:00 +0000</pubDate><author>Author</author><guid>https://blog.n0p.me/2020/02/2020-02-05-dnsmonster/</guid><description>Why Monitor DNS traffic As a member of a Security Incident Response Team, Iâ€™ve seen that the normal security practices like deploying firewalls, IDS sensors, NSM Toolkit and Netflow Monitoring. SIRT is increasingly looking to the network as a data source. For years infosec has been network-address-centric and the attackers have adapted. Today it is very common to see malware command and control (C&amp;amp;C) use domain generation algorithms (DGAs), Peer-to-Peer (P2P), or even fast-flux DNS to evade IP address-based detection and blocking.</description></item><item><title>What is port sharding in Linux and why should I care</title><link>https://blog.n0p.me/2018/02/2018-02-20-portsharding/</link><pubDate>Tue, 20 Feb 2018 18:18:00 +0000</pubDate><author>Author</author><guid>https://blog.n0p.me/2018/02/2018-02-20-portsharding/</guid><description>It&amp;rsquo;s actually called SO_REUSEPORT Kernel 3.9 introduced a new cool feature in SOCKET interface called SO_REUSEPORT. So what is it?
As the official documentation says, it allows multiple AF_INET or AF_INET6 sockets to be bound to an identical socket address. before binding a socket to an interface, each one should have this option enabled. This way, mutiple processes can listen on the same port at the same time!
How Can This Possibly Be Secure?</description></item></channel></rss>